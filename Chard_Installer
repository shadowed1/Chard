#!/bin/bash
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
BOLD=$(tput bold)
RESET=$(tput sgr0)

set -e

CHARD_ROOT="/usr/local/chard"
CHARD_RC="$CHARD_ROOT/.chardrc"

echo "[*] Creating CHARD ROOT in $CHARD_ROOT..."
sudo mkdir -p "$CHARD_ROOT"/{etc/portage,usr/portage,usr/bin,usr/lib,var/tmp,var/cache/distfiles,var/cache/packages,bin,dev,tmp}

ARCH=$(uname -m)
case "$ARCH" in
    x86_64)   GENTOO_ARCH="amd64" ;;
    i*86)     GENTOO_ARCH="x86" ;;
    aarch64)  GENTOO_ARCH="arm64" ;;
    armv7l)   GENTOO_ARCH="arm" ;;
    ppc64le)  GENTOO_ARCH="ppc64le" ;;
    *) echo "Unknown architecture: $ARCH"; exit 1 ;;
esac

MAKE_CONF="$CHARD_ROOT/etc/portage/make.conf"
echo "[*] Writing $MAKE_CONF..."
sudo bash -c "cat > '$MAKE_CONF' <<EOF
CHOST='${GENTOO_ARCH}-unknown-linux-gnu'
ARCH='${GENTOO_ARCH}'
ACCEPT_KEYWORDS='~${GENTOO_ARCH}'
ROOT='${CHARD_ROOT}'
CFLAGS='-O2 -pipe'
CXXFLAGS='\${CFLAGS}'
PORTAGE_TMPDIR='\${ROOT}/var/tmp'
DISTDIR='\${ROOT}/var/cache/distfiles'
PKGDIR='\${ROOT}/var/cache/packages'
EOF"

echo "[*] make.conf created with ARCH=${GENTOO_ARCH}"

PORTAGE_DIR="$CHARD_ROOT/usr/portage"
SNAPSHOT_URL="https://gentoo.osuosl.org/snapshots/portage-latest.tar.xz"
TMP_TAR="$CHARD_ROOT/var/tmp/portage-latest.tar.xz"

echo "[*] Downloading Portage tree snapshot..."
sudo curl -L -o "$TMP_TAR" "$SNAPSHOT_URL"

echo "[*] Extracting snapshot into $PORTAGE_DIR..."
sudo tar -xJf "$TMP_TAR" -C "$PORTAGE_DIR" --strip-components=1
sudo rm -f "$TMP_TAR"

echo "[*] Portage tree ready in $PORTAGE_DIR"

echo "[*] Bootstrapping Gentoo stage3..."
BASE="https://bouncer.gentoo.org/fetch/root/all/releases/$GENTOO_ARCH/autobuilds/current-stage3-$GENTOO_ARCH"

BASE="https://bouncer.gentoo.org/fetch/root/all/releases/$GENTOO_ARCH/autobuilds/current-stage3-$GENTOO_ARCH"
LATEST_FILE_LIST="$CHARD_ROOT/var/tmp/latest-stage3.txt"

curl -fsSL "$BASE/latest-stage3-$GENTOO_ARCH.txt" | tr -d '\r' | sed '/^#/d;/^$/d' > "$LATEST_FILE_LIST"

STAGE3_FILE=$(tail -n1 "$LATEST_FILE_LIST")

if [ -z "$STAGE3_FILE" ]; then
    echo "${RED}ERROR: Could not determine stage3 tarball filename${RESET}"
    exit 1
fi

echo "[*] Found stage3 tarball: $STAGE3_FILE"

TMP_STAGE3="$CHARD_ROOT/var/tmp/$(basename "$STAGE3_FILE")"

echo "[*] Downloading stage3 tarball..."
sudo curl -L -o "$TMP_STAGE3" "$BASE/$STAGE3_FILE"

echo "[*] Extracting stage3 into $CHARD_ROOT..."
sudo tar -xJf "$TMP_STAGE3" -C "$CHARD_ROOT" --strip-components=1
sudo rm -f "$TMP_STAGE3"

echo "[*] stage3 bootstrap complete. emerge and all binaries should now be available."

echo "[*] Downloading chard configuration files..."
sudo curl -fsSL https://raw.githubusercontent.com/shadowed1/Chard/main/.chardrc   -o "$CHARD_ROOT/.chardrc"
sudo curl -fsSL https://raw.githubusercontent.com/shadowed1/Chard/main/.chard.env   -o "$CHARD_ROOT/chard.env"
sudo curl -fsSL https://raw.githubusercontent.com/shadowed1/Chard/main/.chard.logic -o "$CHARD_ROOT/chard.logic"
sudo curl -fsSL https://raw.githubusercontent.com/shadowed1/Chard/main/chard -o "$CHARD_ROOT/bin/chard"
sudo chmod +x "$CHARD_ROOT/bin/chard"

echo "[*] Chard root setup complete."
echo "[*] To start using it, run: source $CHARD_RC"

BASHRC="/home/chronos/user/.bashrc"
if ! grep -q "<<< CHARD ENV MARKER <<<" "$BASHRC"; then
    cat >> "$BASHRC" <<'EOF'
# <<< CHARD ENV MARKER <<<
[ -f /usr/local/chard/.chardrc ] && source /usr/local/chard/.chardrc
# <<< END CHARD ENV MARKER <<<
EOF
fi
