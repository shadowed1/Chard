#!/bin/bash
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
CYAN=$(tput setaf 6)
BOLD=$(tput bold)
RESET=$(tput sgr0)

CHARD_ROOT="/usr/local/bin/chard"
MOUNT_DIR="/usr/local/recovery_test"
BUILD_DIR="$CHARD_ROOT/var/tmp"
TOOLCHAIN_DIR="$CHARD_ROOT/usr/toolchain"

echo "[+] Creating Chard directories..."
sudo mkdir -p "$CHARD_ROOT"/{usr/bin,usr/lib,usr/include,usr/toolchain,var/tmp}
sudo chown -R 1000:1000 "$CHARD_ROOT"

echo "[+] Downloading chard configuration files..."
sudo -E curl -fsSL https://raw.githubusercontent.com/shadowed1/Chard/main/.chardrc   -o "$CHARD_ROOT/.chardrc"
sudo -E curl -fsSL https://raw.githubusercontent.com/shadowed1/Chard/main/.chard.env   -o "$CHARD_ROOT/chard.env"
sudo -E curl -fsSL https://raw.githubusercontent.com/shadowed1/Chard/main/.chard.logic -o "$CHARD_ROOT/chard.logic"
sudo -E mkdir -p "$CHARD_ROOT/etc/portage/repos.conf"

sed -i '/^# <<< CHARD ENV MARKER <<</,/^# <<< END CHARD ENV MARKER <<</d' /home/chronos/user/.bashrc

if ! grep -Fxq "<<< CHARD ENV MARKER <<<" "/home/chronos/user/.bashrc"; then
    cat >> "/home/chronos/user/.bashrc" <<EOF

# <<< CHARD ENV MARKER <<<
source "$CHARD_RC"
# <<< END CHARD ENV MARKER <<<
EOF
    echo "[+] Chard sourced to ~/.bashrc"
else
    echo "${YELLOW}[!] Chard already sourced in ~/.bashrc"
fi

ARCH=$(uname -m)
case "$ARCH" in
    x86_64) MUSL_ARCH="x86_64"; TOOLCHAIN_URL="https://musl.cc/x86_64-linux-musl-native.tgz" ;;
    aarch64) MUSL_ARCH="aarch64"; TOOLCHAIN_URL="https://musl.cc/aarch64-linux-musl-native.tgz" ;;
    *) echo "${RED}No musl toolchain available for $ARCH${RESET}"; exit 1 ;;
esac

echo "[+] Downloading musl toolchain..."
mkdir -p "$BUILD_DIR"
TOOLCHAIN_TAR="$BUILD_DIR/$(basename "$TOOLCHAIN_URL")"
curl -L -o "$TOOLCHAIN_TAR" "$TOOLCHAIN_URL"

echo "[+] Extracting musl toolchain..."
mkdir -p "$TOOLCHAIN_DIR"
tar -xzf "$TOOLCHAIN_TAR" -C "$TOOLCHAIN_DIR" --strip-components=1
rm -f "$TOOLCHAIN_TAR"

echo "[+] Symlinking musl toolchain binaries into $CHARD_ROOT/usr/bin..."
for bin in gcc g++ ar ld ranlib strip cc c++; do
    if [ -f "$TOOLCHAIN_DIR/bin/$MUSL_ARCH-linux-musl-$bin" ]; then
        ln -sf "$TOOLCHAIN_DIR/bin/$MUSL_ARCH-linux-musl-$bin" "$CHARD_ROOT/usr/bin/$bin"
    fi
done

# export CC="$CHARD_ROOT/usr/bin/gcc"
# export CXX="$CHARD_ROOT/usr/bin/g++"
# export AR="$CHARD_ROOT/usr/bin/ar"
# export RANLIB="$CHARD_ROOT/usr/bin/ranlib"
# export PATH="$CHARD_ROOT/usr/bin:$TOOLCHAIN_DIR/bin:$PATH"
# export CFLAGS="-I$CHARD_ROOT/usr/include -O2 -pipe -static -fPIC"
# export CXXFLAGS="$CFLAGS"
# export LDFLAGS="-L$CHARD_ROOT/usr/lib -static"
