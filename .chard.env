# <<< CHARD_ENV >>>
export CHARD_ROOT="/usr/local/chard"
export ROOT="$CHARD_ROOT"
export CHARD_RC="$CHARD_ROOT/.chardrc"

export PORTAGE_TMPDIR="$ROOT/var/tmp"
export DISTDIR="$ROOT/var/cache/distfiles"
export PKGDIR="$ROOT/var/cache/packages"
export PORTDIR="$ROOT/usr/portage"

for p in "$CHARD_ROOT/usr/bin" "$CHARD_ROOT/bin"; do
    case ":$PATH:" in
        *":$p:"*) ;;
        *) PATH="$p:$PATH" ;;
    esac
done
export PATH

CHARD_LD_PATH="$ROOT/usr/lib"
[ -d "$ROOT/usr/lib64" ] && CHARD_LD_PATH="$CHARD_LD_PATH:$ROOT/usr/lib64"
CHARD_LD_PATH="$CHARD_LD_PATH:$ROOT/lib"

if [ -z "${LD_LIBRARY_PATH:-}" ]; then
    export LD_LIBRARY_PATH="$CHARD_LD_PATH"
else
    case ":$LD_LIBRARY_PATH:" in
        *":$CHARD_LD_PATH:"*) ;;
        *) export LD_LIBRARY_PATH="$CHARD_LD_PATH:$LD_LIBRARY_PATH" ;;
    esac
fi

if [ -x "$CHARD_ROOT/usr/musl/bin/musl-gcc" ]; then
    export CC="$CHARD_ROOT/usr/musl/bin/musl-gcc"
    export CXX="$CHARD_ROOT/usr/musl/bin/musl-g++"
    export AR="$CHARD_ROOT/usr/musl/bin/ar"
    export LD="$CHARD_ROOT/usr/musl/bin/ld"
    export RANLIB="$CHARD_ROOT/usr/musl/bin/ranlib"
    export STRIP="$CHARD_ROOT/usr/musl/bin/strip"
fi

export EMERGE_DEFAULT_OPTS="--quiet-build=y --jobs=$(nproc)"
# <<< END CHARD_ENV >>>
